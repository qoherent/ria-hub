{{template "base/head_new" .}}

<style>

    #status {
        padding: 10px;
        color: white;
        font-weight: bold;
        border-radius: 5px;
        width: fit-content;
    }
    .green {
        background-color: green;
    }
    .red {
        background-color: red;
    }
    #output {
        height: 780px; /* Set a fixed height for the output container */
        overflow-y: scroll; /* Enable vertical scrolling */
        font-size: 20px;
    }

</style>

<div role="main" aria-label="{{.Title}}" class="page-content main-content ui">

    <p id="status" class="status">Loading...</p>

	<a id="submitDefault"><button>Submit default</button></a>
    <a href="config"><button>Edit Config File only</button></a>
    <a href="train"><button>Edit Train Default File only</button></a>
    <a href="both"><button>Edit both</button></a>

    <div id="output"></div>

</div>

<script>
    const outputDiv = document.getElementById('output');
        const connectButton = document.getElementById('submitDefault');
        let ws;

        function connectWebSocket() {
            ws = new WebSocket("ws://192.168.0.106:8000/ws-run-instruction/");

            ws.onopen = function(event) {
                outputDiv.innerHTML += "<p>WebSocket connection established.</p>";
            };

            ws.onmessage = function(event) {
                const message = JSON.parse(event.data);
                if (message.type === 'command') {
                    outputDiv.innerHTML += `<p style="color: green;">${message.content}</p>`;
                } else if (message.type === 'output') {
                    outputDiv.innerHTML += `<p>${message.content}</p>`;
                } else if (message.type === 'instruction') {
                    outputDiv.innerHTML += `<p style="color: blue;">${message.content}</p>`;
                } else if (message.type === 'error') {
                    outputDiv.innerHTML += `<p style="color: red;">${message.content}</p>`;
                } else if (message.type === 'message') {
                    outputDiv.innerHTML += `<p>${message.content}</p>`;
                }
                // Scroll to the bottom of the output container
                outputDiv.scrollTop = outputDiv.scrollHeight;
            };

            ws.onerror = function(error) {
                outputDiv.innerHTML += `<p style="color: red;">WebSocket error: ${error}</p>`;
            };

            ws.onclose = function(event) {
                outputDiv.innerHTML += "<p>WebSocket connection closed.</p>";
            };
        }

        connectButton.addEventListener('click', connectWebSocket);

        const statusDiv = document.getElementById('status');
        const ws_status = new WebSocket('ws://192.168.0.106:8000/status/');

        ws_status.onopen = function(event) {
            statusDiv.textContent = 'Connected';
        };

        ws_status.onclose = function(event) {
            statusDiv.textContent = 'Not Connected, refresh to reconnect';
        };

        ws_status.onerror = function(event) {
            statusDiv.textContent = 'WebSocket error occurred';
        };
    
</script>

{{template "base/footer" .}}